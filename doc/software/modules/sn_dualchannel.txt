//==============================================================================
/**
\addtogroup group_app_sn

\section sect_dualsn_impl Dual channel - Implementation details
A dual channelled SN demo means that a second redundant application processor
runs concurrently to a single channelled processor. These two processors always
receive the same input data stream at slightly the same time which makes them
behave like they are the same.

An additional serial connection between the two redundant processors is used
in order to verify that both processors always produce the same output data
in each cycle.

As one of the processors always triggers the data exchange with the PCP and
also assembles the final output image for POWERLINK,
the execution on both processors is not completely concurrent.
Therefore the names **uP-Master** and **uP-Slave** are chosen for these two
processors.

\subsection sect_dualsn_impl_rcv Receive data flow
Basically each information block produced by the PCP and forwarded to the uP-Master
is also sent to the redundant controller uP-Slave. The information flow is
conveyed by the PSI interface by extending the SPI connection from the uP-Master
to the PCP with additional lines to the uP-Slave. The following wires of the
PCP <-> uP-Master connection are shared with the SPI-Slave of uP-Slave:
- SPI master clock (SCK)
- Master in Slave out (MISO)
- Slave Select (SS)

> The MISO line from the uP-Master <-> PCP interconnect is connected to the MOSI
> line of uP-Slave.

![Demo receive data flow details](sn-dual-rcv_data_flow.png)
@image latex sn-dual-rcv_data_flow.eps "Demo receive data flow details"

This wiring enables the concurrent forwarding of the input data image from the PCP
to the safe processors. The data exchange occurs as following:
1. PCP triggers the synchronous interrupt on SoC reception
2. The uP-Master wakes up and starts an SPI transfer by setting the SS active for
   both SPI Slaves.
3. When the SPI master clock starts to toggle the input and output images are
   exchanged between the PCP and the uP-Master.
4. As the MISO wire is connected to both uP-Master and uP-Slave both cores receive
   the input image and have a concurrent view of the incoming data from the network.

\subsection sect_dualsn_impl_trans Transmit data flow
The transmit data flow is slightly more complex than the receive data flow, as
every produced frame needs to be assembled from one subframe of uP-Master and
uP-Slave. This means that the PCP needs to transmit an openSAFETY frame where
sub1 was produced by uP-Master and sub2 by uP-Slave.

In order to fulfil this requirement the transmit data flow is executed as given
in the following figure. This shall occur in the following order:
1. uP-Master and uP-Slave produce a new transmit safety frame.
2. uP-Slave transmits it's sub2 to the uP-Master over the USART serial.
3. uP-Master assembles its own sub1 with the received sub2.
4. On the next exchange of the process image between the PCP and uP-Master the new
   transmit frame is on the network.

![Demo transmit data flow details](sn-dual-trans_data_flow.png)
@image latex sn-dual-trans_data_flow.eps "Demo transmit data flow details"

*/
